// <auto-generated />
using System;
using Domain.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Domain.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    [Migration("20211114142913_altKategoriİslemleri")]
    partial class altKategoriİslemleri
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Concrete.AltKategoriler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("altKategoriAdi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("AltKategoriler");
                });

            modelBuilder.Entity("Domain.Concrete.Kategoriler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Domain.Concrete.TeknikOzellikler", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeknikOzelliklerAltBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeknikOzelliklerAnaBaslikId")
                        .HasColumnType("int");

                    b.Property<string>("teknikOzellikDegerleri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("TeknikOzelliklerAnaBaslikId");

                    b.ToTable("TeknikOzellikler");
                });

            modelBuilder.Entity("Domain.Concrete.TeknikOzelliklerAnaBaslik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("anaBaslik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeknikOzelliklerAnaBaslik");
                });

            modelBuilder.Entity("Domain.Concrete.Urunler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DeletedTime")
                        .HasColumnType("datetime2");

                    b.Property<float>("Fiyat")
                        .HasMaxLength(7)
                        .HasColumnType("real");

                    b.Property<string>("Fotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndirimYuzde")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<float>("IndirimliFiyat")
                        .HasMaxLength(7)
                        .HasColumnType("real");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("MarkaFotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stok")
                        .HasMaxLength(6)
                        .HasColumnType("int");

                    b.Property<string>("UrunAciklamaBaslik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UrunAciklamaIcerik")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("UrunEkAciklama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("createTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("Domain.Concrete.detayFotograflar", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("detayFotograf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("urunlerId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("urunlerId");

                    b.ToTable("DetayFotograflar");
                });

            modelBuilder.Entity("Domain.Concrete.kategorilerAltKategoriler", b =>
                {
                    b.Property<int>("kategorilerId")
                        .HasColumnType("int");

                    b.Property<int>("AltKategorilerId")
                        .HasColumnType("int");

                    b.HasKey("kategorilerId", "AltKategorilerId");

                    b.HasIndex("AltKategorilerId");

                    b.ToTable("kategorilerAltKategoriler");
                });

            modelBuilder.Entity("Domain.Concrete.urunlerAltKategoriler", b =>
                {
                    b.Property<int>("urunlerId")
                        .HasColumnType("int");

                    b.Property<int>("AltKategorilerId")
                        .HasColumnType("int");

                    b.HasKey("urunlerId", "AltKategorilerId");

                    b.HasIndex("AltKategorilerId");

                    b.ToTable("urunlerAltKategoriler");
                });

            modelBuilder.Entity("Domain.Concrete.urunlerTeknikOzellikler", b =>
                {
                    b.Property<int>("urunlerId")
                        .HasColumnType("int");

                    b.Property<int>("teknikOzelliklerAnaBaslikId")
                        .HasColumnType("int");

                    b.HasKey("urunlerId", "teknikOzelliklerAnaBaslikId");

                    b.HasIndex("teknikOzelliklerAnaBaslikId");

                    b.ToTable("urunlerTeknikOzellikler");
                });

            modelBuilder.Entity("Domain.Concrete.TeknikOzellikler", b =>
                {
                    b.HasOne("Domain.Concrete.TeknikOzelliklerAnaBaslik", "TeknikOzelliklerAnaBaslik")
                        .WithMany("TeknikOzellikler")
                        .HasForeignKey("TeknikOzelliklerAnaBaslikId");

                    b.Navigation("TeknikOzelliklerAnaBaslik");
                });

            modelBuilder.Entity("Domain.Concrete.Urunler", b =>
                {
                    b.HasOne("Domain.Concrete.Kategoriler", "Kategori")
                        .WithMany("urunAdi")
                        .HasForeignKey("KategoriId");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Domain.Concrete.detayFotograflar", b =>
                {
                    b.HasOne("Domain.Concrete.Urunler", "urunler")
                        .WithMany("detayFotograflar")
                        .HasForeignKey("urunlerId");

                    b.Navigation("urunler");
                });

            modelBuilder.Entity("Domain.Concrete.kategorilerAltKategoriler", b =>
                {
                    b.HasOne("Domain.Concrete.AltKategoriler", "AltKategoriler")
                        .WithMany("kategorilerAltKategoriler")
                        .HasForeignKey("AltKategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Concrete.Kategoriler", "Kategoriler")
                        .WithMany("kategorilerAltKategoriler")
                        .HasForeignKey("kategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltKategoriler");

                    b.Navigation("Kategoriler");
                });

            modelBuilder.Entity("Domain.Concrete.urunlerAltKategoriler", b =>
                {
                    b.HasOne("Domain.Concrete.AltKategoriler", "AltKategoriler")
                        .WithMany("urunlerAltKategoriler")
                        .HasForeignKey("AltKategorilerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Concrete.Urunler", "Urunler")
                        .WithMany("urunlerAltKategoriler")
                        .HasForeignKey("urunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AltKategoriler");

                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("Domain.Concrete.urunlerTeknikOzellikler", b =>
                {
                    b.HasOne("Domain.Concrete.TeknikOzelliklerAnaBaslik", "TeknikOzelliklerAnaBaslik")
                        .WithMany("urunlerTeknikOzellikler")
                        .HasForeignKey("teknikOzelliklerAnaBaslikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Concrete.Urunler", "urunler")
                        .WithMany("urunlerTeknikOzellikler")
                        .HasForeignKey("urunlerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeknikOzelliklerAnaBaslik");

                    b.Navigation("urunler");
                });

            modelBuilder.Entity("Domain.Concrete.AltKategoriler", b =>
                {
                    b.Navigation("kategorilerAltKategoriler");

                    b.Navigation("urunlerAltKategoriler");
                });

            modelBuilder.Entity("Domain.Concrete.Kategoriler", b =>
                {
                    b.Navigation("kategorilerAltKategoriler");

                    b.Navigation("urunAdi");
                });

            modelBuilder.Entity("Domain.Concrete.TeknikOzelliklerAnaBaslik", b =>
                {
                    b.Navigation("TeknikOzellikler");

                    b.Navigation("urunlerTeknikOzellikler");
                });

            modelBuilder.Entity("Domain.Concrete.Urunler", b =>
                {
                    b.Navigation("detayFotograflar");

                    b.Navigation("urunlerAltKategoriler");

                    b.Navigation("urunlerTeknikOzellikler");
                });
#pragma warning restore 612, 618
        }
    }
}
